// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TEMA_MEDII_ROCA_RARES_GEORGE.Data;

#nullable disable

namespace TEMA_MEDII_ROCA_RARES_GEORGE.Migrations
{
    [DbContext(typeof(TEMA_MEDII_ROCA_RARES_GEORGEContext))]
    [Migration("20230206003010_migrare")]
    partial class migrare
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TEMA_MEDII_ROCA_RARES_GEORGE.Models.Service", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("TEMA_MEDII_ROCA_RARES_GEORGE.Models.ServiceAppointment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ServiceID");

                    b.ToTable("ServiceAppointment");
                });

            modelBuilder.Entity("TEMA_MEDII_ROCA_RARES_GEORGE.Models.ServiceDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool>("DuminicaClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuminicaEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DuminicaStartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("JoiClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JoiEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("JoiStartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LuniClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LuniEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LuniStartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MartiClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MartiEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MartiStartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MiercuriClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MiercuriEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MiercuriStartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PaymentCard")
                        .HasColumnType("bit");

                    b.Property<bool>("PaymentCash")
                        .HasColumnType("bit");

                    b.Property<bool>("SambataClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SambataEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SambataStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ServiceID")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceTypeID")
                        .HasColumnType("int");

                    b.Property<bool>("VineriClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VineriEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VineriStartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("WaitingZone")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("ServiceID");

                    b.HasIndex("ServiceTypeID");

                    b.ToTable("ServiceDetail");
                });

            modelBuilder.Entity("TEMA_MEDII_ROCA_RARES_GEORGE.Models.ServiceType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ServiceType");
                });

            modelBuilder.Entity("TEMA_MEDII_ROCA_RARES_GEORGE.Models.ServiceAppointment", b =>
                {
                    b.HasOne("TEMA_MEDII_ROCA_RARES_GEORGE.Models.Service", "Service")
                        .WithMany("ServiceAppointments")
                        .HasForeignKey("ServiceID");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("TEMA_MEDII_ROCA_RARES_GEORGE.Models.ServiceDetail", b =>
                {
                    b.HasOne("TEMA_MEDII_ROCA_RARES_GEORGE.Models.Service", "Services")
                        .WithMany("ServiceDetails")
                        .HasForeignKey("ServiceID");

                    b.HasOne("TEMA_MEDII_ROCA_RARES_GEORGE.Models.ServiceType", "ServiceTypes")
                        .WithMany("ServiceDetails")
                        .HasForeignKey("ServiceTypeID");

                    b.Navigation("ServiceTypes");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("TEMA_MEDII_ROCA_RARES_GEORGE.Models.Service", b =>
                {
                    b.Navigation("ServiceAppointments");

                    b.Navigation("ServiceDetails");
                });

            modelBuilder.Entity("TEMA_MEDII_ROCA_RARES_GEORGE.Models.ServiceType", b =>
                {
                    b.Navigation("ServiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
